<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_cb_design_topic">
    <sys_cb_design_topic action="INSERT_OR_UPDATE">
        <compiled_topic display_value="_PRVW__e356b7be8aba479693a270907438f1df">29932a05832dd210b4f0f929feaad30e</compiled_topic>
        <design_definition>{"type":"FlowTopic","triggers":[{"type":"Trigger","name":"62ec2623c08b4494a21fff2965215baa","triggerType":"request","applicability":{"type":"Applicability","mode":"script","value":"true"},"id":"62ec2623c08b4494a21fff2965215baa"}],"goals":[{"name":"primary","trigger_id":"62ec2623c08b4494a21fff2965215baa","nodes":[{"type":"StartGoal","goal_id":"primary","greeting_msg":{"type":"String","mode":"string","value":"gs.getMessageLang(\"I can help you find and update NeedIt records for a type of request.\", vaContext.getRequesterLang())"},"id":"2f94cc8f3e7c4336a768a659ecb9ed0e","name":"Start","expert_mode":false},{"type":"TerminateGoal","goal_id":"primary","confirmation_msg":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Ask again when you need to update other NeedIt records.\", vaContext.getRequesterLang())"},"id":"dc99ed3378654cb2a0d872b3170d9203","name":"End","expert_mode":false},{"type":"ChoiceInputPrompt","expression_mode":"simple","metadataScript":"","cardName":"","cardFields":[],"id":"eccf28a6917e44c998992281005d5497","name":"NeedIt Type","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"variable_id":"ab7095bb19784d52a02561c527a5dfe5","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Which type of NeedIt record would you like to view?\", vaContext.getRequesterLang())"},"request_feedback":false,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"description":""},{"type":"TextOutputPrompt","value":[{"type":"String","mode":"script","value":"(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    // Return the display value (Label) for the needit_type choice\n      return 'You selected: ' + vaInputs.needit_type.getDisplayValue();\n})()\n"}],"request_feedback":true,"id":"53b76cc32b7845aaa4ef564e90c45ec5","name":"Confirm NeedIt Type","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"secure":false},{"type":"ReferenceChoiceInputPrompt","mode":"external","id":"02778141d8cb4ad0b187cae9dad8fa00","name":"NeedIt List","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"variable_id":"41fae300430b4502b421dc9bd5b9a4eb","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Select a NeedIt record to view.\", vaContext.getRequesterLang())"},"request_feedback":false,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"expression_mode":"script","script":"(function execute(table) {\n    /* Code your glide record query logic here. For example:\n\n        var options = [];\n        var gr = new GlideRecordSecure(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n    var options = []; // add options here...\n    // Query the table selected in the Table field for active records with the \n      // u_request_type selected in the NeedIt Type node where the user is the \n      // u_requested_for. Order the results by the When needed value.\n      var grNI = new GlideRecord(table);\n      grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n      grNI.addQuery('active','true');\n      grNI.addQuery('u_requested_for',vaInputs.user);\n      grNI.orderBy('u_when_needed');\n      grNI.query();\n  \n      // Push a value and label pair to the array for each record the query returns.\n      // The value is the unique value. The label is the number, u_when_needed, and         // short_description values for the NeedIt record.\n      while(grNI.next()) {\n          options.push({ 'value': grNI.getUniqueValue(), \n          'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n      }\n  \n    return options;\n})(table)\n","metadataScript":"","cardName":"","cardFields":[],"no_options_found_message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"You have no open NeedIt records.\", vaContext.getRequesterLang())"},"condition":{"type":"Condition","mode":"glide_scripted_query","value":"(function execute(table) {\n    /* Code your glide record query logic here. For example:\n\n        var options = [];\n        var gr = new GlideRecordSecure(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n    var options = []; // add options here...\n    // Query the table selected in the Table field for active records with the \n      // u_request_type selected in the NeedIt Type node where the user is the \n      // u_requested_for. Order the results by the When needed value.\n      var grNI = new GlideRecord(table);\n      grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n      grNI.addQuery('active','true');\n      grNI.addQuery('u_requested_for',vaInputs.user);\n      grNI.orderBy('u_when_needed');\n      grNI.query();\n  \n      // Push a value and label pair to the array for each record the query returns.\n      // The value is the unique value. The label is the number, u_when_needed, and         // short_description values for the NeedIt record.\n      while(grNI.next()) {\n          options.push({ 'value': grNI.getUniqueValue(), \n          'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n      }\n  \n    return options;\n})(table)\n"},"description":""},{"type":"RecordOutputPrompt","mode":"variable","table":"x_58872_needit_needit","variable_id":"41fae300430b4502b421dc9bd5b9a4eb","fields":["u_when_needed","priority","short_description"],"request_feedback":true,"id":"90cfd66d33fa45f09ebb770d7d9bf269","name":"NeedIt Card","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"condition":{"type":"Condition","mode":"glide_query","value":""}},{"type":"InputPrompt","variable_id":"1741f3edce244ab0afc3acac0fb9a415","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"Would you like to view another NeedIt Record?\", vaContext.getRequesterLang())"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"request_feedback":false,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"id":"88652d590ed94b6a9f40ad48726dd581","name":"Search Again","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"description":""},{"type":"Decision","name":"Find more NeedIt records?","branches":[{"type":"Branch","label":"No","expression":{"type":"Applicability","mode":"query","value":"search_again=false"},"id":"de03b0096d404e13b66fb3bc01543c1e","name":"No","expert_mode":false},{"type":"Branch","label":"Yes","expression":{"type":"Applicability","mode":"query","value":"search_again=true"},"id":"5213377f3a0d4d64954e0f0ad6b59e6c","name":"Yes","expert_mode":false}],"id":"5a731927ddb647c68e1e6d757de320d9","goal_id":"primary","expert_mode":false},{"type":"InputPrompt","variable_id":"7e2fa2925791407c9d8e85093e712fc4","message":{"type":"String","mode":"string","value":"gs.getMessageLang(\"When do you need the NeedIt completed?\", vaContext.getRequesterLang())"},"nlu_entity_binding":{"type":"NLUEntityBinding","allow_text_input":false,"use_confirmation_prompt":true},"request_feedback":false,"skippable":{"type":"Applicability","mode":"script","value":"false"},"skipreprompt":{"type":"Applicability","mode":"script","value":"false"},"id":"7bffc4c939b044c79e146e5f2ac2cf4f","name":"New When Needed Date","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"description":""},{"type":"CRUDAction","mode":"update","query":"u_when_needed={{vaInputs.new_when_needed_date}}","variable_id":"41fae300430b4502b421dc9bd5b9a4eb","id":"2664947b52464c5ca7fc24ec1c8dab94","name":"Change When Needed Date","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"attachments":[{"type":"String","mode":"string","value":""}]},{"type":"RecordOutputPrompt","mode":"variable","table":"x_58872_needit_needit","variable_id":"41fae300430b4502b421dc9bd5b9a4eb","fields":["u_when_needed"],"request_feedback":true,"id":"07f13a0d39d846f79c693a86f3112be9","name":"Updated NeedIt","goal_id":"primary","applicability":{"type":"Applicability","mode":"script","value":"true"},"expert_mode":false,"condition":{"type":"Condition","mode":"glide_query","value":""}}],"edges":[{"type":"Edge","source_node_id":"88652d590ed94b6a9f40ad48726dd581","target_node_id":"5a731927ddb647c68e1e6d757de320d9","id":"177af79cb7af4094a35bfc7dfffa1bbd"},{"type":"Edge","source_node_id":"5a731927ddb647c68e1e6d757de320d9","target_node_id":"dc99ed3378654cb2a0d872b3170d9203","branch_id":"de03b0096d404e13b66fb3bc01543c1e","id":"47e1cbc28c25471a9be23f8a3c1d12f7","name":"de03b0096d404e13b66fb3bc01543c1e"},{"type":"Edge","source_node_id":"5a731927ddb647c68e1e6d757de320d9","target_node_id":"eccf28a6917e44c998992281005d5497","branch_id":"5213377f3a0d4d64954e0f0ad6b59e6c","id":"0ca0dc7e8bd54fd29ec84eb61f9a3e7c","name":"5213377f3a0d4d64954e0f0ad6b59e6c"},{"type":"Edge","source_node_id":"2f94cc8f3e7c4336a768a659ecb9ed0e","target_node_id":"eccf28a6917e44c998992281005d5497","id":"3c4a93ef74b94decafb6adcc06415abc"},{"type":"Edge","source_node_id":"eccf28a6917e44c998992281005d5497","target_node_id":"53b76cc32b7845aaa4ef564e90c45ec5","id":"311767f395c44911aab2bda0836b779b"},{"type":"Edge","source_node_id":"53b76cc32b7845aaa4ef564e90c45ec5","target_node_id":"02778141d8cb4ad0b187cae9dad8fa00","id":"104ed8d9a9644942a917240ddbd85caf"},{"type":"Edge","source_node_id":"02778141d8cb4ad0b187cae9dad8fa00","target_node_id":"90cfd66d33fa45f09ebb770d7d9bf269","id":"2f127d8e6d3c47b49a743274a6110bc5"},{"type":"Edge","source_node_id":"90cfd66d33fa45f09ebb770d7d9bf269","target_node_id":"7bffc4c939b044c79e146e5f2ac2cf4f","id":"47c0bf4fd10c40b89e3490a549b16e2a"},{"type":"Edge","source_node_id":"7bffc4c939b044c79e146e5f2ac2cf4f","target_node_id":"2664947b52464c5ca7fc24ec1c8dab94","id":"e0da1323f3cf4736a067f3732912902b"},{"type":"Edge","source_node_id":"2664947b52464c5ca7fc24ec1c8dab94","target_node_id":"07f13a0d39d846f79c693a86f3112be9","id":"11fd00956a18412e887326555a4781ad"},{"type":"Edge","source_node_id":"07f13a0d39d846f79c693a86f3112be9","target_node_id":"88652d590ed94b6a9f40ad48726dd581","id":"274882c4057642968ec2f2ae35bf91e2"}],"id":"primary"}],"script_variables":[{"type":"String","name":"LiveAgent_application","value":{"type":"String","mode":"string"},"list":false,"id":"742bede06bb84f72abeb3d4c411e3c2e","formatType":"text","secure":false,"sensitive":false,"aiInput":false}],"glide_variables":[{"type":"Reference","table":"sys_user","id":"current-user","name":"user","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false},{"type":"Choice","choices":[{"name":"Legal","element":"Legal"},{"name":"Facilities","element":"Facilities"},{"name":"Human Resources","element":"Human Resources"}],"id":"ab7095bb19784d52a02561c527a5dfe5","name":"needit_type","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false,"label":"NeedIt Type"},{"type":"Reference","table":"x_58872_needit_needit","id":"41fae300430b4502b421dc9bd5b9a4eb","name":"needit_list","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false},{"type":"True/False","id":"1741f3edce244ab0afc3acac0fb9a415","name":"search_again","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false},{"type":"Date/Time","mode":"date","id":"7e2fa2925791407c9d8e85093e712fc4","name":"new_when_needed_date","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false},{"type":"Reference","table":"","id":"1ce502908e0141029ceb33da173cb09f","name":"change_when_needed_date","formatType":"text","secure":false,"sensitive":false,"aiInput":false,"list":false}],"applicability":{"type":"Applicability","mode":"script","value":"true"},"roles":[],"scope":"9fd925058329d210b4f0f929feaad31a","domain":"global","topic_type":"STANDARD","channels":[],"dialog_acts_enabled":true,"id":"29c0358d8329d210b4f0f929feaad3a4","name":"_PRVW__e356b7be8aba479693a270907438f1df","key_phrases":["Update NeedIt Records","NeedIt Request"],"nlu_provider":"","nlu_model":"","nlu_model_label":"","nlu_intent":"","nlu_intent_label":"","flexible_conversation_switching":false,"autopilot_topic":false,"design_categories":[{"name":null,"visible":false,"sysId":"433a29858329d210b4f0f929feaad31f"}],"triggerable_by_notification":false,"description":"Topic allows user to update their records","model_type":"nlu_keyword","foundational":false,"modify_confirmation_enabled":true,"context_profiles":[],"title":"Update NeedIt Records","library":false,"csTopicId":"fa8e790183a9d210b4f0f929feaad36b","readOnly":false,"nluMapping":"[]"}</design_definition>
        <design_topic_id>29c0358d8329d210b4f0f929feaad3a4</design_topic_id>
        <graph>{
  "graph_api_version": "1.0.68",
  "goals": {
    "primary": {
      "id": "primary",
      "trigger": {
        "type": "primary"
      },
      "name": "primary",
      "applicability": "",
      "description": "",
      "nodes": {
        "2f94cc8f3e7c4336a768a659ecb9ed0e": {
          "id": "2f94cc8f3e7c4336a768a659ecb9ed0e",
          "stepType": "Start",
          "name": "Start",
          "greetingResponse": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "I can help you find and update NeedIt records for a type of request."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "dc99ed3378654cb2a0d872b3170d9203": {
          "id": "dc99ed3378654cb2a0d872b3170d9203",
          "stepType": "TerminateGoal",
          "name": "End",
          "confirmationMessage": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Ask again when you need to update other NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          }
        },
        "eccf28a6917e44c998992281005d5497": {
          "name": "NeedIt Type",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Which type of NeedIt record would you like to view?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "ab7095bb19784d52a02561c527a5dfe5",
          "detailDescription": "",
          "id": "eccf28a6917e44c998992281005d5497",
          "stepType": "ChoicePrompt",
          "hasCardHeader": false,
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "53b76cc32b7845aaa4ef564e90c45ec5": {
          "id": "53b76cc32b7845aaa4ef564e90c45ec5",
          "stepType": "TextOutput",
          "name": "Confirm NeedIt Type",
          "secure": false,
          "value": [
            {
              "value": "(function execute() {\n    /* Return a quoted string.  For example:\n\n       if (vaInputs.first_name == 'Bill') {\n           return gs.getMessageLang(\"hi there {0}\", vaContext.getRequesterLang(), [vaInputs.first_name]);\n       } else {\n           return gs.getMessageLang(\"how are you {0}\", vaContext.getRequesterLang(), [vaInputs.last_name]);\n       }\n    */\n    // Return the display value (Label) for the needit_type choice\n      return 'You selected: ' + vaInputs.needit_type.getDisplayValue();\n})()\n",
              "mode": "script"
            }
          ],
          "requestFeedback": true,
          "applicability": {
            "value": "",
            "mode": "query"
          }
        },
        "02778141d8cb4ad0b187cae9dad8fa00": {
          "name": "NeedIt List",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Select a NeedIt record to view."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "variableId": "41fae300430b4502b421dc9bd5b9a4eb",
          "detailDescription": "",
          "id": "02778141d8cb4ad0b187cae9dad8fa00",
          "stepType": "ReferenceChoicePrompt",
          "mode": "glide_record",
          "script": "",
          "metadataScript": "",
          "cardData": {},
          "isMultipleSelect": false,
          "noRecordsResponseMsg": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "You have no open NeedIt records."
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "condition": {
            "mode": "glide_scripted_query",
            "value": "(function execute(table) {\n    /* Code your glide record query logic here. For example:\n\n        var options = [];\n        var gr = new GlideRecordSecure(table);\n        gr.addEncodedQuery('active=true^numberSTARTSWITHINC001001');\n        gr.setLimit(10);\n        gr.query();\n        while(gr.next()) {\n            options.push({ 'value': gr.getUniqueValue(), 'label': gr.getValue('short_description') });\n        }\n        return options;\n    */\n\n    var options = []; // add options here...\n    // Query the table selected in the Table field for active records with the \n      // u_request_type selected in the NeedIt Type node where the user is the \n      // u_requested_for. Order the results by the When needed value.\n      var grNI = new GlideRecord(table);\n      grNI.addQuery('u_request_type',vaInputs.needit_type.getValue());\n      grNI.addQuery('active','true');\n      grNI.addQuery('u_requested_for',vaInputs.user);\n      grNI.orderBy('u_when_needed');\n      grNI.query();\n  \n      // Push a value and label pair to the array for each record the query returns.\n      // The value is the unique value. The label is the number, u_when_needed, and         // short_description values for the NeedIt record.\n      while(grNI.next()) {\n          options.push({ 'value': grNI.getUniqueValue(), \n          'label': grNI.getValue('number') + \" (\" + grNI.getDisplayValue('u_when_needed') + \"): \" + grNI.getValue('short_description') });\n      }\n  \n    return options;\n})(table)\n"
          },
          "hasCardHeader": false,
          "cardMetadata": {
            "mode": "card",
            "metadataScript": "",
            "cardTemplate": "",
            "cardFields": {},
            "cardDefinition": {}
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false
        },
        "90cfd66d33fa45f09ebb770d7d9bf269": {
          "id": "90cfd66d33fa45f09ebb770d7d9bf269",
          "stepType": "RecordOutput",
          "name": "NeedIt Card",
          "variableId": "41fae300430b4502b421dc9bd5b9a4eb",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "u_when_needed",
            "priority",
            "short_description"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "requestFeedback": true,
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        },
        "88652d590ed94b6a9f40ad48726dd581": {
          "id": "88652d590ed94b6a9f40ad48726dd581",
          "stepType": "BooleanPrompt",
          "name": "Search Again",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "Would you like to view another NeedIt Record?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "1741f3edce244ab0afc3acac0fb9a415",
          "detailDescription": ""
        },
        "5a731927ddb647c68e1e6d757de320d9": {
          "id": "5a731927ddb647c68e1e6d757de320d9",
          "stepType": "Decision",
          "name": "Find more NeedIt records?"
        },
        "7bffc4c939b044c79e146e5f2ac2cf4f": {
          "id": "7bffc4c939b044c79e146e5f2ac2cf4f",
          "stepType": "DateTimePrompt",
          "name": "New When Needed Date",
          "prompt": {
            "value": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "text": "When do you need the NeedIt completed?"
                  }
                ]
              }
            ],
            "mode": "simple"
          },
          "confirmMessage": {
            "value": "",
            "mode": "simple"
          },
          "acknowledgeMsg": {
            "value": "",
            "mode": "simple"
          },
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "skippable": {
            "value": "",
            "mode": "query"
          },
          "skipReprompt": {
            "value": "",
            "mode": "query"
          },
          "defaultValue": {
            "value": "",
            "mode": "simple"
          },
          "withNluUserInput": false,
          "skipIfFulfilled": false,
          "variableId": "7e2fa2925791407c9d8e85093e712fc4",
          "detailDescription": ""
        },
        "2664947b52464c5ca7fc24ec1c8dab94": {
          "id": "2664947b52464c5ca7fc24ec1c8dab94",
          "stepType": "CrudAction",
          "name": "Change When Needed Date",
          "template": {
            "query": {
              "terms": [
                {
                  "prefix": "",
                  "operator": "=",
                  "operand": "u_when_needed",
                  "expression": "{{vaInputs.new_when_needed_date}}"
                }
              ]
            },
            "queryString": "u_when_needed={{vaInputs.new_when_needed_date}}"
          },
          "mode": "update",
          "record": "41fae300430b4502b421dc9bd5b9a4eb",
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "attachments": [
            {
              "value": "",
              "mode": "simple"
            }
          ],
          "variableId": "1ce502908e0141029ceb33da173cb09f"
        },
        "07f13a0d39d846f79c693a86f3112be9": {
          "id": "07f13a0d39d846f79c693a86f3112be9",
          "stepType": "RecordOutput",
          "name": "Updated NeedIt",
          "variableId": "41fae300430b4502b421dc9bd5b9a4eb",
          "cardTemplate": "General",
          "cardFields": {},
          "mode": "variable",
          "tableName": "x_58872_needit_needit",
          "fields": [
            "u_when_needed"
          ],
          "cardDefinition": {
            "name": "Record",
            "value": "General"
          },
          "requestFeedback": true,
          "applicability": {
            "value": "",
            "mode": "query"
          },
          "condition": {
            "mode": "glide_query",
            "value": ""
          }
        }
      },
      "edges": [
        {
          "id": "177af79cb7af4094a35bfc7dfffa1bbd",
          "edgeType": "Edge",
          "source": "88652d590ed94b6a9f40ad48726dd581",
          "target": "5a731927ddb647c68e1e6d757de320d9",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "47e1cbc28c25471a9be23f8a3c1d12f7",
          "edgeType": "Branch",
          "source": "5a731927ddb647c68e1e6d757de320d9",
          "target": "dc99ed3378654cb2a0d872b3170d9203",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=false",
            "mode": "query"
          },
          "label": "No"
        },
        {
          "id": "0ca0dc7e8bd54fd29ec84eb61f9a3e7c",
          "edgeType": "Branch",
          "source": "5a731927ddb647c68e1e6d757de320d9",
          "target": "eccf28a6917e44c998992281005d5497",
          "sourcePort": "",
          "targetPort": "",
          "expression": {
            "value": "vaInputs.search_again=true",
            "mode": "query"
          },
          "label": "Yes"
        },
        {
          "id": "3c4a93ef74b94decafb6adcc06415abc",
          "edgeType": "Edge",
          "source": "2f94cc8f3e7c4336a768a659ecb9ed0e",
          "target": "eccf28a6917e44c998992281005d5497",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "311767f395c44911aab2bda0836b779b",
          "edgeType": "Edge",
          "source": "eccf28a6917e44c998992281005d5497",
          "target": "53b76cc32b7845aaa4ef564e90c45ec5",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "104ed8d9a9644942a917240ddbd85caf",
          "edgeType": "Edge",
          "source": "53b76cc32b7845aaa4ef564e90c45ec5",
          "target": "02778141d8cb4ad0b187cae9dad8fa00",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "2f127d8e6d3c47b49a743274a6110bc5",
          "edgeType": "Edge",
          "source": "02778141d8cb4ad0b187cae9dad8fa00",
          "target": "90cfd66d33fa45f09ebb770d7d9bf269",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "47c0bf4fd10c40b89e3490a549b16e2a",
          "edgeType": "Edge",
          "source": "90cfd66d33fa45f09ebb770d7d9bf269",
          "target": "7bffc4c939b044c79e146e5f2ac2cf4f",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "e0da1323f3cf4736a067f3732912902b",
          "edgeType": "Edge",
          "source": "7bffc4c939b044c79e146e5f2ac2cf4f",
          "target": "2664947b52464c5ca7fc24ec1c8dab94",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "11fd00956a18412e887326555a4781ad",
          "edgeType": "Edge",
          "source": "2664947b52464c5ca7fc24ec1c8dab94",
          "target": "07f13a0d39d846f79c693a86f3112be9",
          "sourcePort": "",
          "targetPort": ""
        },
        {
          "id": "274882c4057642968ec2f2ae35bf91e2",
          "edgeType": "Edge",
          "source": "07f13a0d39d846f79c693a86f3112be9",
          "target": "88652d590ed94b6a9f40ad48726dd581",
          "sourcePort": "",
          "targetPort": ""
        }
      ]
    }
  },
  "variables": {
    "742bede06bb84f72abeb3d4c411e3c2e": {
      "id": "742bede06bb84f72abeb3d4c411e3c2e",
      "name": "LiveAgent_application",
      "value": {
        "mode": "simple",
        "value": null
      },
      "varType": "script",
      "category": "vaVars"
    },
    "current-user": {
      "category": "vaInputs",
      "id": "current-user",
      "label": "User",
      "name": "user",
      "table": "sys_user",
      "varType": "reference"
    },
    "ab7095bb19784d52a02561c527a5dfe5": {
      "id": "ab7095bb19784d52a02561c527a5dfe5",
      "name": "needit_type",
      "label": "NeedIt Type",
      "varType": "choice",
      "choices": [
        {
          "label": "Legal",
          "value": "Legal"
        },
        {
          "label": "Facilities",
          "value": "Facilities"
        },
        {
          "label": "Human Resources",
          "value": "Human Resources",
          "checked": true,
          "meta": {}
        }
      ],
      "category": "vaInputs",
      "nodeId": "eccf28a6917e44c998992281005d5497",
      "isHidden": false
    },
    "41fae300430b4502b421dc9bd5b9a4eb": {
      "id": "41fae300430b4502b421dc9bd5b9a4eb",
      "name": "needit_list",
      "label": "NeedIt List",
      "varType": "reference",
      "table": "x_58872_needit_needit",
      "category": "vaInputs",
      "nodeId": "07f13a0d39d846f79c693a86f3112be9",
      "isHidden": false
    },
    "1741f3edce244ab0afc3acac0fb9a415": {
      "id": "1741f3edce244ab0afc3acac0fb9a415",
      "name": "search_again",
      "label": "Search Again",
      "varType": "boolean",
      "secure": false,
      "category": "vaInputs",
      "nodeId": "88652d590ed94b6a9f40ad48726dd581",
      "isHidden": false
    },
    "7e2fa2925791407c9d8e85093e712fc4": {
      "id": "7e2fa2925791407c9d8e85093e712fc4",
      "name": "new_when_needed_date",
      "label": "New When Needed Date",
      "varType": "date_time",
      "secure": false,
      "category": "vaInputs",
      "mode": "date",
      "nodeId": "7bffc4c939b044c79e146e5f2ac2cf4f",
      "isHidden": false
    },
    "1ce502908e0141029ceb33da173cb09f": {
      "id": "1ce502908e0141029ceb33da173cb09f",
      "name": "change_when_needed_date",
      "label": "Change When Needed Date",
      "varType": "reference",
      "table": "",
      "inactive": true,
      "category": "vaInputs",
      "nodeId": "2664947b52464c5ca7fc24ec1c8dab94",
      "isHidden": false
    }
  }
}</graph>
        <name>_PRVW__e356b7be8aba479693a270907438f1df</name>
        <sys_class_name>sys_cb_design_topic</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-28 04:41:39</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>a593ee01836dd210b4f0f929feaad379</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FlowTopic</sys_name>
        <sys_package display_value="NeedIt Virtual Agent Conversations" source="x_1550259_needit_v">9fd925058329d210b4f0f929feaad31a</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt Virtual Agent Conversations">9fd925058329d210b4f0f929feaad31a</sys_scope>
        <sys_update_name>sys_cb_design_topic_a593ee01836dd210b4f0f929feaad379</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-28 04:41:39</sys_updated_on>
        <type>FlowTopic</type>
    </sys_cb_design_topic>
</record_update>
